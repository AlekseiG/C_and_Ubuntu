#include<stdlib.h>
#include<unistd.h>
#include<stdio.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <time.h>
#include <unistd.h>
void FILE_GENERATION (int n) {
  FILE* gen = fopen ("gen.bin",'wb');
	char ch = ' ';
	for (int i = n; i < n; i++){
		 fwrite (i , 1 , sizeof(i) , gen );
		 fwrite (ch , 1 , sizeof(ch) , gen );
	}
	fclose (gen);
	return;
}
int main()
{ 		int pid;
		int fd;
		int n =10;
		FILE_GENERATION(n);
		fd = open ("gen.bin", O_RDWR, S_IRUSR | S_IWUSR);

		void* file_memory = mmap (0, n, PROT_READ | PROT_WRITE,	MAP_SHARED, fd, 0);
		close (fd);

		 pid = fork();
		 if (pid == 0){

			 int sum = 0, integer;
			 for (int i = 0; i < n/2; i++){
				 scanf (file_memory, "%d", &integer);
				 sum+=integer;
			 }
			 FILE* tmp = fopen("tmp.txt","r");
			 int forksum;
			 wait(1);
			 fscanf (tmp,"%d", &forksum);
			 fclose (tmp);
			 sum += forksum;
			 printf ("%d\n", sum);

		 }
		 else {
			 int sum = 0, integer;
			 for (int i = n/2; i < n; i++){
				 scanf (file_memory, "%d", &integer);
				 sum += integer;
			 }
			 FILE* tmp = fopen("tmp.txt","w");
			 fprintf (tmp, "%d", sum);
			 fclose (tmp);
		 }
}
